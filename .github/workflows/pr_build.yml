name: DotNet Instrumentation PR Build
on:
  pull_request:
    branches:
      - main
      - "release/v*"

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Build on Linux
        if: runner.os == 'Linux'
        run: bash build.sh

      - name: Build on Windows
        if: runner.os == 'Windows'
        run: .\build.cmd
        
      - name: Test on Linux
        if: runner.os == 'Linux'
        run: dotnet test

      - name: Test on Windows
        if: runner.os == 'Windows'
        run: dotnet test
        
      - name: Upload Artifact on X64 Linux
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: AWS-opentelemetry-dotnet-instrumentation-linux-glibc-x64.zip
          path: bin/AWS-opentelemetry-dotnet-instrumentation-linux-glibc-x64.zip
        
  dotnet-e2e-ec2-default-test:
    needs: [ build ]
    strategy:
      fail-fast: false
      matrix:
        aws-region: [ 'us-east-1' ]
    uses: ./.github/workflows/application-signals-dotnet-e2e-ec2-default-test.yml
    secrets: inherit
    with:
      aws-region: ${{ matrix.aws-region }}
      caller-workflow-name: 'main-build'
      staging_wheel_name: 'AWS-opentelemetry-dotnet-instrumentation-linux-glibc-x64.zip'
  
  dotnet-e2e-ec2-asg-test:
    needs: [ build ]
    strategy:
      fail-fast: false
      matrix:
        aws-region: [ 'us-east-1' ]
    uses: ./.github/workflows/application-signals-dotnet-e2e-ec2-asg-test.yml
    secrets: inherit
    with:
      aws-region: ${{ matrix.aws-region }}
      caller-workflow-name: 'main-build'
      staging_wheel_name: 'AWS-opentelemetry-dotnet-instrumentation-linux-glibc-x64.zip'